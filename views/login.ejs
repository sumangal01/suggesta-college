<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous">
  <title>Login</title>
  <style>
    .darkbg {
      background-color: #0D1B2A !important;
    }
    .darkcard {
      background-color: #1B263B !important;
      color: white;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    }
    .darkbutton {
      background-color: #243242 !important;
      color: white;
      border: 1px solid #1B263B;
      transition: all 0.3s ease-in-out;
    }
    .darkbutton:hover {
      background-color: #1B263B;
      color: #f8f9fa;
    }
    .form-control:focus {
      background-color: #1B263B;
      color: white;
      border-color: #495057;
    }
  </style>
</head>
<body class="darkbg bg-light d-flex justify-content-center align-items-center vh-100">
  <div class="container darkcard p-4 bg-white rounded" style="max-width: 400px;">
    <h2 class="mb-4 text-center">Log In</h2>
    
    <div id="message-container" class="mb-3"></div>

    <form id="login-form" novalidate>
      <div class="mb-3">
        <label for="email" class="form-label">Email address</label>
        <input type="email" name="email" placeholder="Enter Email" 
               class="form-control" id="email" required>
        <div class="invalid-feedback">Please enter a valid email address.</div>
      </div>
      
      <div class="mb-3">
        <label for="password" class="form-label">Password</label>
        <div class="input-group">
          <input type="password" name="password" placeholder="Enter Password" 
                 class="form-control" id="password" 
                 minlength="8" required>
          <button class="btn btn-outline-secondary" type="button" id="show-password-btn">
            <i id="password-icon" class="bi bi-eye"></i>
          </button>
        </div>
        <div class="invalid-feedback">Password must be at least 8 characters long.</div>
      </div>

      <div class="mb-3 d-flex justify-content-between">
        <div class="form-check">
          <input type="checkbox" class="form-check-input" id="remember-me">
          <label class="form-check-label" for="remember-me">Remember me</label>
        </div>
        <a href="/forgot-password" class="text-decoration-none">Forgot Password?</a>
      </div>

      <button type="submit" class="darkbutton btn w-100 py-2 mb-3">Log In</button>
      
      <div class="text-center">
        Don't have an account? <a href="/signup" class="text-primary">Sign Up</a>
      </div>
    </form>
  </div>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('login-form');
      const messageContainer = document.getElementById('message-container');
      const passwordInput = document.getElementById('password');
      const showPasswordBtn = document.getElementById('show-password-btn');
      const passwordIcon = document.getElementById('password-icon');
      const rememberMeCheckbox = document.getElementById('remember-me');
  
      // Form Validation and Submission
      form.addEventListener('submit', async (event) => {
        event.preventDefault();
        event.stopPropagation();
  
        // Clear previous validation states and messages
        form.classList.remove('was-validated');
        messageContainer.innerHTML = '';
  
        // Check form validity
        if (form.checkValidity()) {
          try {
            const response = await fetch('http://localhost:8000/auth/login', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              credentials: 'include', // Ensures cookies are sent with the request
              body: JSON.stringify({
                email: form.email.value,
                password: form.password.value
              }),
            });
  
            const result = await response.json();
  
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('alert', 
              response.ok ? 'alert-success' : 'alert-danger'
            );
            messageDiv.textContent = result.message;
            messageContainer.appendChild(messageDiv);
  
            if (response.ok) {
              // Redirect to dashboard
              window.location.href = '/dashboard';
            }
          } catch (error) {
            const messageDiv = document.createElement('div');
            messageDiv.classList.add('alert', 'alert-danger');
            messageDiv.textContent = 'An error occurred. Please try again.';
            messageContainer.appendChild(messageDiv);
          }
        } else {
          form.classList.add('was-validated');
        }
      });
  
      // Password visibility toggle
      showPasswordBtn.addEventListener('click', () => {
        const type = passwordInput.type === 'password' ? 'text' : 'password';
        passwordInput.type = type;
        passwordIcon.classList.toggle('bi-eye');
        passwordIcon.classList.toggle('bi-eye-slash');
      });
    });
  </script>
  
</body>
</html>
